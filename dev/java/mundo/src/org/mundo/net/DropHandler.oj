/*
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is MundoCore Java.
 *
 * The Initial Developer of the Original Code is Telecooperation Group,
 * Department of Computer Science, Darmstadt University of Technology.
 * Portions created by the Initial Developer are
 * Copyright (C) 2001-2008 the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 * Erwin Aitenbichler
 */

package org.mundo.net;

import java.util.HashMap;
import java.util.ArrayList;
import java.util.Random;

import org.mundo.rt.Blob;
import org.mundo.rt.GUID;
import org.mundo.rt.IMessageHandler;
import org.mundo.rt.Message;
import org.mundo.rt.ProtocolStack;
import org.mundo.rt.Service;
import org.mundo.rt.TypedArray;
import org.mundo.rt.TypedMap;
import org.mundo.rt.Logger;

#ifdef CFG_CHECKED_BUILD
#  define LOG log
#else
#  define LOG //
#endif

/**
 * This handler randomly drops packets. It can be used to test the correct
 * behavior of handlers that retransmit packets, etc.
 * 
 * @author erwin
 */
public class DropHandler extends Service implements IMessageHandler emits IMessageHandler
{
  public DropHandler()
  {
  }
  public void init()
  {
    super.init();
  }
  /**
   *
   */
  public boolean down(Message msg)
  {
    TypedMap map = msg.getMap("ers", "passive");
    if (map!=null)
    {
      String req = map.getString("request");
      if (!"message".equals(req))
      {
        LOG.fine("packet with ers control message passes");
        return emit.down(msg);
      }
    }

    int pktsz = 0;
    Blob b = msg.getBlob("all", "bin");
    if (b!=null)
      pktsz = b.size();
    
    int rate = 10;
    int minsize = 512;
    TypedMap opts = msg.getHandler().getOptions();
    if (opts!=null)
    {
      rate = opts.getInt("rate", rate);
      minsize = opts.getInt("minsize", minsize);
    }

    if ((pktsz==0 || pktsz>minsize) && rand.nextInt(100)<rate)
    {
      LOG.fine("packet with size "+pktsz+" dropped");
      return true;
    }
    LOG.fine("packet with size "+pktsz+ " passes");
    return emit.down(msg);
  }
  /**
   *
   */
  public boolean up(Message msg)
  {
    // We do not register our own MIMEType, so this method is never called
    throw new UnsupportedOperationException();
  }
  
  private Random rand = new Random();
  private Logger log = Logger.getLogger("drop");
}
