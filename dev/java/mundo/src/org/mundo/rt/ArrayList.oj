/*
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is MundoCore Java.
 *
 * The Initial Developer of the Original Code is Telecooperation Group,
 * Department of Computer Science, Darmstadt University of Technology.
 * Portions created by the Initial Developer are
 * Copyright (C) 2001-2008 the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 * Erwin Aitenbichler
 */

#ifdef CFG_CLDC
package org.mundo.rt;

/**
 * Replacement for <code>java.util.ArrayList</code> for platforms that do not
 * define the this standard class. Only to be used on CLDC.
 *
 * @author Erwin Aitenbichler
 */
public class ArrayList extends java.util.Vector implements List
{
  public boolean add(Object o)
  {
    addElement(o);
    return true;
  }
  public Object get(int i)
  {
    return elementAt(i);
  }
  public boolean remove(Object o)
  {
    return removeElement(o);
  }
  public void remove(int i)
  {
    removeElementAt(i);
  }
  public Iterator iterator()
  {
    return new ArrayListIterator(this);
  }

  public static class ArrayListIterator implements Iterator
  {
    /**
     * Initializes a new iterator with the specified array.
     */
    ArrayListIterator(ArrayList a)
    {
      array=a;
      pos=-1;
    }
    /**
     * Returns true if the iteration has more elements.
     */
    public boolean hasNext()
    {
      return pos<array.size()-1;
    }
    /**
     * Returns the next element in the iteration.
     */
    public Object next()
    {
      return array.get(++pos);
    }
    /**
     * Removes from the underlying collection the last element returned by the
     * iterator (optional operation).
     */
    public void remove()
    {
      array.remove(pos--);
    }

    private ArrayList array;
    private int pos;
  }
}
#endif
